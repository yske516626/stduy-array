#include<stdio.h>
void Init(int arr[], int sz) // 这里是arr[]是指针，用来接收传来arr[10]传过来的首元素地址
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		arr[i] = 0;
	}
}
void Printf(int arr[],int sz)
{
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
}
void Reverse(int arr1[], int sz1)
{
	int left = 0;
	int right = sz1 - 1;
	int i = 0;
	//for(i=0;i<right/2;i++)
	//  {
	//	  arr1[left+i] = arr1[left+i] ^ arr1[right-i];
	//	  arr1[right-i] = arr1[left+i] ^ arr1[right-i];第一种
	//	  arr1[left+i] = arr1[left+i] ^ arr1[right-i];
	//  }
	//while (right > left)
	//{
	//	arr1[left] = arr1[left] ^ arr1[right];
	//	arr1[right] = arr1[left] ^ arr1[right];//第二种
	//	arr1[left] = arr1[left] ^ arr1[right];
	//	left++;
	//	right--;
	//}
	while (right > left)
	{
		int tam = arr1[left];
		arr1[left] = arr1[right];//第三种，可读性高
		arr1[right] = tam;
		left++;
		right--;
	}

}
int main(void)
{
	int arr[10] = { 0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int arr1[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz1 = sizeof(arr1) / sizeof(arr1[0]);
	Init(arr, sz);//初始化
//数组传参过去的是首元素的地址，sz在Init内是无法计算出来的，因为接收arr[10]数组的arr[]是个指针
	Printf(arr, sz);//打印
	Reverse(arr1, sz1);
	Printf(arr1, sz1);
	return 0;
}
